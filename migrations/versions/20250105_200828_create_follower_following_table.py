"""create follower/following table

Revision ID: ea045f9aff45
Revises: 3df8a9846da3
Create Date: 2025-01-05 20:08:28.968304

"""
from alembic import op
import sqlalchemy as sa
import os
is_production = os.environ.get('FLASK_DEBUG') == '0'
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = 'ea045f9aff45'
down_revision = '3df8a9846da3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('followers',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('followed_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('about_me', sa.String(length=255), nullable=True))

    # ### end Alembic commands ###

    table_name = "followers"
    if is_production:
        op.execute(sa.text(f"ALTER TABLE {table_name} SET SCHEMA {SCHEMA};"))

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('about_me')

    op.drop_table('followers')
    # ### end Alembic commands ###
